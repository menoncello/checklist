name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Add concurrency control to prevent resource exhaustion (Security fix)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  BUN_VERSION: 1.1.x
  # Enforce HTTPS for all requests (Security fix)
  NODE_TLS_REJECT_UNAUTHORIZED: 1

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      
      - name: Run TypeScript Type Check
        run: bun run type-check
      
      - name: Run Linting
        run: bun run lint
      
      - name: Check Formatting
        run: bun run format:check
      
      - name: Run Tests with Coverage
        run: bun test --coverage
      
      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/*.test.ts.snap
            test-results/
          retention-days: 7

  build:
    name: Build (${{ matrix.os }})
    needs: test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
          - os: macos-latest
            platform: darwin
            arch: arm64
          - os: windows-latest
            platform: win32
            arch: x64
    
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      
      - name: Build Packages
        run: bun run build
      
      - name: Compile Binary
        run: |
          bun build ./packages/cli/src/index.ts \
            --compile \
            --target=bun-${{ matrix.platform }}-${{ matrix.arch }} \
            --outfile=dist/checklist-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
      
      - name: Validate Binary Size
        shell: bash
        run: |
          BINARY_PATH="dist/checklist-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          SIZE=$(stat -f%z "$BINARY_PATH" 2>/dev/null || stat -c%s "$BINARY_PATH" 2>/dev/null || echo 0)
          SIZE_MB=$((SIZE / 1048576))
          echo "Binary size: ${SIZE_MB}MB"
          if [ $SIZE_MB -gt 20 ]; then
            echo "ERROR: Binary size exceeds 20MB limit (${SIZE_MB}MB)"
            exit 1
          fi
      
      - name: Test Binary
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            ./dist/checklist-${{ matrix.platform }}-${{ matrix.arch }}.exe --version
          else
            ./dist/checklist-${{ matrix.platform }}-${{ matrix.arch }} --version
          fi
        shell: bash
      
      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.platform }}-${{ matrix.arch }}
          path: dist/checklist-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          retention-days: 7

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}
      
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      
      - name: Run Benchmarks
        run: bun run bench
      
      - name: Validate Performance Thresholds
        run: bun run bench:assert
      
      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: .performance/
          retention-days: 7

  quality-gates:
    name: Quality Gates
    needs: [test, build, performance]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check Test Results
        if: needs.test.result != 'success'
        run: |
          echo "Tests failed or were cancelled"
          exit 1
      
      - name: Check Build Results
        if: needs.build.result != 'success'
        run: |
          echo "Build failed or was cancelled"
          exit 1
      
      - name: Check Performance Results
        if: needs.performance.result != 'success'
        run: |
          echo "Performance tests failed or were cancelled"
          exit 1
      
      - name: All Quality Gates Passed
        run: echo "âœ… All quality gates passed successfully!"